/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p2pchatapp;

import java.awt.Color;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author aditya
 */
public class AddFriendGUI extends javax.swing.JFrame {
    String username;
    ClientGUI clientGUI;
    /**
     * Creates new form AddFriendGUI
     */
    public AddFriendGUI(ClientGUI clientGUI, String username) {
        initComponents();
        this.username = username;
        this.clientGUI = clientGUI;
        this.setLocation(220,180);
        jButton1.setBackground(new Color(255,255,255));
        fetchUserList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setForeground(new java.awt.Color(153, 153, 255));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 11, 130, 23));

        jButton1.setForeground(new java.awt.Color(153, 153, 255));
        jButton1.setText("Add Friend");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 10, 130, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(153, 153, 255));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 45, 460, 330));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p2pchatapp/chat_backkk.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String friend_name = jTextField1.getText().trim();
        if(friend_name.length()==0 || friend_name.equals(username))
            JOptionPane.showMessageDialog(null, "User Not Found");
        else{
            try {
                Socket socket = new Socket("172.16.26.197",444);
                Scanner IN = new Scanner(socket.getInputStream());
                PrintWriter OUT = new PrintWriter(socket.getOutputStream());
                OUT.println("A\n"+username+"\n"+friend_name);
                OUT.flush();
                String response = IN.nextLine();
                if(response.equals("**")){
                    JOptionPane.showMessageDialog(null, "New Friend Added !");
                    clientGUI.addFriend(friend_name);
                }
                else if(response.equals("***"))
                    JOptionPane.showMessageDialog(null, "User is already a friend !");
                else
                    JOptionPane.showMessageDialog(null, "User Not Found");
                socket.close();
            } catch (IOException ex) {
                Logger.getLogger(MainScreenGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFriendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFriendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFriendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFriendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFriendGUI(null,"").setVisible(true);
            }
        });
    }
    
    public void fetchUserList(){
        try {
                Socket socket = new Socket("172.16.26.197",444);
                PrintWriter OUT = new PrintWriter(socket.getOutputStream());
                OUT.println("S\n"+username);
                OUT.flush();
                Scanner IN = new Scanner(socket.getInputStream());
                while(IN.hasNextLine()){
                    jTextArea1.append(" -- "+IN.nextLine()+"\n");
                }
                socket.close();
            } catch (IOException ex) {
                Logger.getLogger(MainScreenGUI.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex);
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
